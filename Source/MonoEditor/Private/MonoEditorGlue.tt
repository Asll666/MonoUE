<#@ template language="C#" #>
<#@ output extension=".cpp" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
//
// THIS FILE HAS BEEN GENERATED BY A TOOL
// DO NOT UPDATE MANUALLY
//
// Copyright (c) Microsoft Corporation.  All Rights Reserved.
// See LICENSE.txt in the plugin root for license information.

#include "MonoEditorPrivatePCH.h"
#include "MonoIdeAgent.h"

static_assert(sizeof(FDelegateHandle) == sizeof(uint64), "Size of FDelegateHandle has changed");

<#GenerateEventGlue("BeginPIE", "bool");#>

<#GenerateEventGlue("EndPIE", "bool");#>

<#GenerateEventGlue("PausePIE", "bool");#>

<#GenerateEventGlue("ResumePIE", "bool");#>

<#GenerateEventGlue("SingleStepPIE", "bool");#>

<#GenerateEventGlue("BeginLocalPlay", "uint32");#>

<#+
void GenerateEventGlue (string name, params string[] argTypes)
{
    var type = string.Join(",", argTypes);
#>
MONO_PINVOKE_FUNCTION(uint64) MonoIdeAgent_FEditorDelegates_<#=name#>_Add(void(*handler)(<#=type#>))
{
	FDelegateHandle handle = FEditorDelegates::<#=name#>.AddStatic(handler);
	return *reinterpret_cast<uint64*>(&handle);
}

MONO_PINVOKE_FUNCTION(void) MonoIdeAgent_FEditorDelegates_<#=name#>_Remove(uint64 delegateHandle)
{
	FEditorDelegates::<#=name#>.Remove(*reinterpret_cast<FDelegateHandle*>(&delegateHandle));
}
<#+
}
#>