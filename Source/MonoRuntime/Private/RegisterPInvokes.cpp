//
// THIS FILE HAS BEEN GENERATED BY A TOOL
// DO NOT UPDATE MANUALLY
//
// Copyright (c) Microsoft Corporation.  All Rights Reserved.
// See LICENSE.txt in the plugin root for license information.

#include "MonoRuntimeCommon.h"
#include "IMonoRuntime.h"
#include "PInvokeSignatures.h"
#include "CoreMinimal.h"
#include <mono/utils/mono-dl-fallback.h>

static TMap<FString,void*> MonoPInvokeFunctionMap_MonoRuntime;

static void MonoPInvokeRegisterFunctions_MonoRuntime()
{
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Bindings_OnUnhandledExceptionNative")), (void*)Bindings_OnUnhandledExceptionNative);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("LogTextWriter_Serialize")), (void*)LogTextWriter_Serialize);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FName_FromString")), (void*)FName_FromString);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FName_FromStringAndNumber")), (void*)FName_FromStringAndNumber);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FQuat_ScaleVector")), (void*)FQuat_ScaleVector);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FVector_SafeNormal")), (void*)FVector_SafeNormal);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FVector_SafeNormal2D")), (void*)FVector_SafeNormal2D);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FVector_ToRotator")), (void*)FVector_ToRotator);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRandomStream_GetFraction")), (void*)FRandomStream_GetFraction);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRandomStream_GetUnsignedInt")), (void*)FRandomStream_GetUnsignedInt);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRandomStream_GetUnitVector")), (void*)FRandomStream_GetUnitVector);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRandomStream_RandRange")), (void*)FRandomStream_RandRange);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRandomStream_VRandCone")), (void*)FRandomStream_VRandCone);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRandomStream_VRandCone2")), (void*)FRandomStream_VRandCone2);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRotator_FromQuat")), (void*)FRotator_FromQuat);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FRotator_FromMatrix")), (void*)FRotator_FromMatrix);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FQuat_FromRotator")), (void*)FQuat_FromRotator);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FMatrix_FromRotator")), (void*)FMatrix_FromRotator);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("FVector_FromRotator")), (void*)FVector_FromRotator);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ScriptArrayBase_EmptyArray")), (void*)ScriptArrayBase_EmptyArray);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ScriptArrayBase_AddToArray")), (void*)ScriptArrayBase_AddToArray);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ScriptArrayBase_InsertInArray")), (void*)ScriptArrayBase_InsertInArray);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ScriptArrayBase_RemoveFromArray")), (void*)ScriptArrayBase_RemoveFromArray);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetNativeClassFromName")), (void*)UnrealInterop_GetNativeClassFromName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetNativeStructFromName")), (void*)UnrealInterop_GetNativeStructFromName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetNativeStructSize")), (void*)UnrealInterop_GetNativeStructSize);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetPropertyOffsetFromName")), (void*)UnrealInterop_GetPropertyOffsetFromName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetNativePropertyFromName")), (void*)UnrealInterop_GetNativePropertyFromName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetPropertyRepIndexFromName")), (void*)UnrealInterop_GetPropertyRepIndexFromName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetArrayElementSize")), (void*)UnrealInterop_GetArrayElementSize);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetPropertyArrayDimFromName")), (void*)UnrealInterop_GetPropertyArrayDimFromName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_GetBitfieldValueFromProperty")), (void*)UnrealInterop_GetBitfieldValueFromProperty);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_SetBitfieldValueForProperty")), (void*)UnrealInterop_SetBitfieldValueForProperty);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_SetStringValueForProperty")), (void*)UnrealInterop_SetStringValueForProperty);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_SetStringValue")), (void*)UnrealInterop_SetStringValue);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_RPC_ResetLastFailedReason")), (void*)UnrealInterop_RPC_ResetLastFailedReason);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_RPC_ValidateFailed")), (void*)UnrealInterop_RPC_ValidateFailed);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_RPC_GetLastFailedReason")), (void*)UnrealInterop_RPC_GetLastFailedReason);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealObject_GetFName")), (void*)UnrealObject_GetFName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealObject_GetNativeFunctionFromClassAndName")), (void*)UnrealObject_GetNativeFunctionFromClassAndName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealObject_GetNativeFunctionFromInstanceAndName")), (void*)UnrealObject_GetNativeFunctionFromInstanceAndName);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealObject_GetNativeFunctionParamsSize")), (void*)UnrealObject_GetNativeFunctionParamsSize);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealObject_InvokeFunction")), (void*)UnrealObject_InvokeFunction);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealObject_InvokeStaticFunction")), (void*)UnrealObject_InvokeStaticFunction);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ActorComponent_GetComponentTickEnabled")), (void*)ActorComponent_GetComponentTickEnabled);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ActorComponent_SetComponentTickEnabled")), (void*)ActorComponent_SetComponentTickEnabled);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ActorComponent_GetTickGroup")), (void*)ActorComponent_GetTickGroup);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ActorComponent_SetTickGroup")), (void*)ActorComponent_SetTickGroup);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Actor_GetComponentsBoundingBoxNative")), (void*)Actor_GetComponentsBoundingBoxNative);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Actor_GetActorTickEnabled")), (void*)Actor_GetActorTickEnabled);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Actor_SetActorTickEnabled")), (void*)Actor_SetActorTickEnabled);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Actor_GetTickGroup")), (void*)Actor_GetTickGroup);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Actor_SetTickGroup")), (void*)Actor_SetTickGroup);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Actor_TearOff")), (void*)Actor_TearOff);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("CharacterMovementComponent_ForceReplicationUpdate")), (void*)CharacterMovementComponent_ForceReplicationUpdate);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Controller_GetPlayerViewPoint")), (void*)Controller_GetPlayerViewPoint);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("CollisionChannel_FromTraceType")), (void*)CollisionChannel_FromTraceType);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("CollisionChannel_FromObjectType")), (void*)CollisionChannel_FromObjectType);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("TraceType_FromCollisionChannel")), (void*)TraceType_FromCollisionChannel);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("ObjectType_FromCollisionChannel")), (void*)ObjectType_FromCollisionChannel);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Pawn_GetViewRotation")), (void*)Pawn_GetViewRotation);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("Pawn_TurnOff")), (void*)Pawn_TurnOff);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("SceneComponent_SetupAttachment")), (void*)SceneComponent_SetupAttachment);
	MonoPInvokeFunctionMap_MonoRuntime.Add(FString(TEXT("UnrealInterop_RandHelper")), (void*)UnrealInterop_RandHelper);
}

void* MonoPInvokeLoadLib(const char *name, int flags, char **err, void *user_data)
{
	FString LibName = FString(ANSI_TO_TCHAR(name));

	if (LibName == FString(TEXT("__MonoRuntime")))
	{
		if (MonoPInvokeFunctionMap_MonoRuntime.Num() == 0)
		{
			MonoPInvokeRegisterFunctions_MonoRuntime();
		}
		return &MonoPInvokeFunctionMap_MonoRuntime;
	}

	return nullptr;
}

void* MonoPInvokeGetSymbol(void *handle, const char *name, char **err, void *user_data)
{
	auto Map = reinterpret_cast<TMap<FString, void*>*> (handle);
	FString SymbolName = FString(ANSI_TO_TCHAR(name));
	void **Value = Map->Find(SymbolName);
	if (Value)
		return *Value;
	return nullptr;
}

MonoDlFallbackHandler * handler;

void MonoRegisterDllImportMappings()
{
	handler = mono_dl_fallback_register(MonoPInvokeLoadLib, MonoPInvokeGetSymbol, nullptr, nullptr);
}